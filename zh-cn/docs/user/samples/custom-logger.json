{
  "filename": "custom-logger.md",
  "__html": "<h1>Dubbogo 3.0 自定义日志组件</h1>\n<p>参考samples <a href=\"https://github.com/apache/dubbo-go-samples/tree/master/logger\">dubbo-go-samples/logger</a></p>\n<h2>1. 日志配置</h2>\n<p>dubbogo 3.0 默认采用 zap 日志库，在配置文件中不添加 logger 配置，日志将会打印到控制默认级别为debug。您也可在配置文件中配置日志级别、, 可参照如下方式来配置zap-config和lumberjack-config，从而定制化日志输出。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">dubbo:</span>\n  <span class=\"hljs-attr\">logger:</span>\n    <span class=\"hljs-attr\">zap-config:</span>\n      <span class=\"hljs-attr\">level:</span> <span class=\"hljs-string\">debug</span> <span class=\"hljs-comment\"># 日志级别</span>\n      <span class=\"hljs-attr\">development:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">disableCaller:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">disableStacktrace:</span> <span class=\"hljs-literal\">false</span>\n      <span class=\"hljs-attr\">encoding:</span> <span class=\"hljs-string\">\"console\"</span>\n      <span class=\"hljs-comment\"># zap encoder 配置</span>\n      <span class=\"hljs-attr\">encoderConfig:</span>\n        <span class=\"hljs-attr\">messageKey:</span> <span class=\"hljs-string\">\"message\"</span>\n        <span class=\"hljs-attr\">levelKey:</span> <span class=\"hljs-string\">\"level\"</span>\n        <span class=\"hljs-attr\">timeKey:</span> <span class=\"hljs-string\">\"time\"</span>\n        <span class=\"hljs-attr\">nameKey:</span> <span class=\"hljs-string\">\"logger\"</span>\n        <span class=\"hljs-attr\">callerKey:</span> <span class=\"hljs-string\">\"caller\"</span>\n        <span class=\"hljs-attr\">stacktraceKey:</span> <span class=\"hljs-string\">\"stacktrace\"</span>\n        <span class=\"hljs-attr\">lineEnding:</span> <span class=\"hljs-string\">\"\"</span>\n        <span class=\"hljs-attr\">levelEncoder:</span> <span class=\"hljs-string\">\"capitalColor\"</span>\n        <span class=\"hljs-attr\">timeEncoder:</span> <span class=\"hljs-string\">\"iso8601\"</span>\n        <span class=\"hljs-attr\">durationEncoder:</span> <span class=\"hljs-string\">\"seconds\"</span>\n        <span class=\"hljs-attr\">callerEncoder:</span> <span class=\"hljs-string\">\"short\"</span>\n        <span class=\"hljs-attr\">nameEncoder:</span> <span class=\"hljs-string\">\"\"</span>\n      <span class=\"hljs-attr\">outputPaths:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"stderr\"</span>\n      <span class=\"hljs-attr\">errorOutputPaths:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">\"stderr\"</span>\n    <span class=\"hljs-attr\">lumberjack-config:</span>\n       <span class=\"hljs-comment\"># 写日志的文件名称</span>\n      <span class=\"hljs-attr\">filename:</span> <span class=\"hljs-string\">\"logs.log\"</span>\n      <span class=\"hljs-comment\"># 每个日志文件长度的最大大小，单位是 MiB。默认 100MiB</span>\n      <span class=\"hljs-attr\">maxSize:</span> <span class=\"hljs-number\">1</span>\n      <span class=\"hljs-comment\"># 日志保留的最大天数(只保留最近多少天的日志)</span>\n      <span class=\"hljs-attr\">maxAge:</span> <span class=\"hljs-number\">3</span>\n      <span class=\"hljs-comment\"># 只保留最近多少个日志文件，用于控制程序总日志的大小</span>\n      <span class=\"hljs-attr\">maxBackups:</span> <span class=\"hljs-number\">5</span>\n      <span class=\"hljs-comment\"># 是否使用本地时间，默认使用 UTC 时间</span>\n      <span class=\"hljs-attr\">localTime:</span> <span class=\"hljs-literal\">true</span>\n      <span class=\"hljs-comment\"># 是否压缩日志文件，压缩方法 gzip</span>\n      <span class=\"hljs-attr\">compress:</span> <span class=\"hljs-literal\">false</span>\n</code></pre>\n<h2>2. 日志API 和 自定义日志</h2>\n<p>日志Interface</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">type</span> Logger <span class=\"hljs-keyword\">interface</span> {\n\tInfo(args ...<span class=\"hljs-keyword\">interface</span>{})\n\tWarn(args ...<span class=\"hljs-keyword\">interface</span>{})\n\tError(args ...<span class=\"hljs-keyword\">interface</span>{})\n\tDebug(args ...<span class=\"hljs-keyword\">interface</span>{})\n\tFatal(args ...<span class=\"hljs-keyword\">interface</span>{})\n\n\tInfof(fmt <span class=\"hljs-keyword\">string</span>, args ...<span class=\"hljs-keyword\">interface</span>{})\n\tWarnf(fmt <span class=\"hljs-keyword\">string</span>, args ...<span class=\"hljs-keyword\">interface</span>{})\n\tErrorf(fmt <span class=\"hljs-keyword\">string</span>, args ...<span class=\"hljs-keyword\">interface</span>{})\n\tDebugf(fmt <span class=\"hljs-keyword\">string</span>, args ...<span class=\"hljs-keyword\">interface</span>{})\n\tFatalf(fmt <span class=\"hljs-keyword\">string</span>, args ...<span class=\"hljs-keyword\">interface</span>{})\n}\n</code></pre>\n<p>日志API</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"dubbo.apache.org/dubbo-go/v3/common/logger\"</span>\n\n\nlogger.SetLoggerLevel(warn) <span class=\"hljs-comment\">// 在 main 函数中设置日志级别</span>\nlogger.SetLogger(myLogger)  <span class=\"hljs-comment\">// 在 main 函数中设置自定义logger</span>\n</code></pre>\n<ul>\n<li>日志API不可以在Init 阶段使用，否则可能会发生意料之外的问题。</li>\n</ul>\n<p>下一章: <a href=\"./metrics.html\">【Metrics 数据上报】</a></p>\n",
  "link": "/zh-cn/docs/user/samples/custom-logger.html",
  "meta": {
    "title": "dubbogo 3.0 自定义日志",
    "keywords": "dubbogo 3.0 自定义日志",
    "description": "dubbogo 3.0 自定义日志"
  }
}