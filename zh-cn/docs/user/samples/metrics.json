{
  "filename": "metrics.md",
  "__html": "<h1>Dubbogo 3.0 数据上报</h1>\n<p>参考Samples： <a href=\"https://github.com/apache/dubbo-go-samples/tree/master/metrics\">dubbo-go-samples/metrics</a></p>\n<h2>1. 数据上报配置</h2>\n<p>在不指定 metrics: 字段的时候，默认开启拉模式 prometheus 数据上报，端口默认为9090，监听path默认为/metrics。可参考如下服务端配置例子来定制化。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">dubbo:</span>\n  <span class=\"hljs-attr\">application:</span>\n    <span class=\"hljs-attr\">version:</span> <span class=\"hljs-number\">3.0</span><span class=\"hljs-number\">.0</span><span class=\"hljs-string\">-rc3</span> <span class=\"hljs-comment\"># 版本号</span>\n  <span class=\"hljs-attr\">metrics:</span>\n    <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\"># default is true</span>\n    <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/custom-metrics-path</span> <span class=\"hljs-comment\"># default is /metrics</span>\n    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">9091</span> <span class=\"hljs-comment\"># default is 9090</span>\n    <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">dubbo</span> <span class=\"hljs-comment\"># default is dubbo 作为数据上报 metrics 的前缀</span>\n  <span class=\"hljs-attr\">registries:</span>\n    <span class=\"hljs-attr\">myzk:</span>\n      <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">zookeeper</span>\n      <span class=\"hljs-attr\">address:</span> <span class=\"hljs-string\">localhost:2181</span>\n  <span class=\"hljs-attr\">protocols:</span>\n    <span class=\"hljs-attr\">triple:</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">tri</span>\n      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">20000</span>\n  <span class=\"hljs-attr\">provider:</span>\n    <span class=\"hljs-attr\">services:</span>\n      <span class=\"hljs-attr\">GreeterProvider:</span>\n        <span class=\"hljs-attr\">group:</span> <span class=\"hljs-string\">dubbo-go</span>  <span class=\"hljs-comment\"># 所属 group，需要与客户端一致</span>\n        <span class=\"hljs-attr\">interface:</span> <span class=\"hljs-string\">com.apache.dubbo.HelloService</span>  <span class=\"hljs-comment\"># 接口名</span>\n</code></pre>\n<h2>2. 默认数据上报指标</h2>\n<p>本地启动上述服务端后，可于 localhost:9091/custom-metrics-path 收集到默认数据指标，包含gc、goroutine数目，内存占用情况等。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span>\n<span class=\"hljs-comment\"># TYPE go_gc_duration_seconds summary</span>\n<span class=\"hljs-string\">go_gc_duration_seconds{quantile=\"0\"}</span> <span class=\"hljs-number\">3.0916e-05</span>\n<span class=\"hljs-string\">go_gc_duration_seconds{quantile=\"0.25\"}</span> <span class=\"hljs-number\">3.0916e-05</span>\n<span class=\"hljs-string\">go_gc_duration_seconds{quantile=\"0.5\"}</span> <span class=\"hljs-number\">3.1167e-05</span>\n<span class=\"hljs-string\">go_gc_duration_seconds{quantile=\"0.75\"}</span> <span class=\"hljs-number\">0.000164084</span>\n<span class=\"hljs-string\">go_gc_duration_seconds{quantile=\"1\"}</span> <span class=\"hljs-number\">0.000164084</span>\n<span class=\"hljs-string\">go_gc_duration_seconds_sum</span> <span class=\"hljs-number\">0.000226167</span>\n<span class=\"hljs-string\">go_gc_duration_seconds_count</span> <span class=\"hljs-number\">3</span>\n<span class=\"hljs-comment\"># HELP go_goroutines Number of goroutines that currently exist.</span>\n<span class=\"hljs-comment\"># TYPE go_goroutines gauge</span>\n<span class=\"hljs-string\">go_goroutines</span> <span class=\"hljs-number\">25</span>\n<span class=\"hljs-comment\"># HELP go_info Information about the Go environment.</span>\n<span class=\"hljs-comment\"># TYPE go_info gauge</span>\n<span class=\"hljs-string\">go_info{version=\"go1.17.2\"}</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-comment\"># HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_alloc_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_alloc_bytes</span> <span class=\"hljs-number\">6.195808e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_alloc_bytes_total counter</span>\n<span class=\"hljs-string\">go_memstats_alloc_bytes_total</span> <span class=\"hljs-number\">9.482768e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_buck_hash_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_buck_hash_sys_bytes</span> <span class=\"hljs-number\">1.449179e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_frees_total Total number of frees.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_frees_total counter</span>\n<span class=\"hljs-string\">go_memstats_frees_total</span> <span class=\"hljs-number\">29419</span>\n<span class=\"hljs-comment\"># HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_gc_cpu_fraction gauge</span>\n<span class=\"hljs-string\">go_memstats_gc_cpu_fraction</span> <span class=\"hljs-number\">0.022937924367975027</span>\n<span class=\"hljs-comment\"># HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_gc_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_gc_sys_bytes</span> <span class=\"hljs-number\">5.235864e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_alloc_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_alloc_bytes</span> <span class=\"hljs-number\">6.195808e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_idle_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_idle_bytes</span> <span class=\"hljs-number\">3.792896e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_inuse_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_inuse_bytes</span> <span class=\"hljs-number\">8.036352e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_objects Number of allocated objects.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_objects gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_objects</span> <span class=\"hljs-number\">16489</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_released_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_released_bytes</span> <span class=\"hljs-number\">3.416064e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_heap_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_heap_sys_bytes</span> <span class=\"hljs-number\">1.1829248e+07</span>\n<span class=\"hljs-comment\"># HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_last_gc_time_seconds gauge</span>\n<span class=\"hljs-string\">go_memstats_last_gc_time_seconds</span> <span class=\"hljs-number\">1.635778234064745e+09</span>\n<span class=\"hljs-comment\"># HELP go_memstats_lookups_total Total number of pointer lookups.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_lookups_total counter</span>\n<span class=\"hljs-string\">go_memstats_lookups_total</span> <span class=\"hljs-number\">0</span>\n<span class=\"hljs-comment\"># HELP go_memstats_mallocs_total Total number of mallocs.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_mallocs_total counter</span>\n<span class=\"hljs-string\">go_memstats_mallocs_total</span> <span class=\"hljs-number\">45908</span>\n<span class=\"hljs-comment\"># HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_mcache_inuse_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_mcache_inuse_bytes</span> <span class=\"hljs-number\">9600</span>\n<span class=\"hljs-comment\"># HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_mcache_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_mcache_sys_bytes</span> <span class=\"hljs-number\">16384</span>\n<span class=\"hljs-comment\"># HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_mspan_inuse_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_mspan_inuse_bytes</span> <span class=\"hljs-number\">116144</span>\n<span class=\"hljs-comment\"># HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_mspan_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_mspan_sys_bytes</span> <span class=\"hljs-number\">131072</span>\n<span class=\"hljs-comment\"># HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_next_gc_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_next_gc_bytes</span> <span class=\"hljs-number\">7.935184e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_other_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_other_sys_bytes</span> <span class=\"hljs-number\">1.426069e+06</span>\n<span class=\"hljs-comment\"># HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_stack_inuse_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_stack_inuse_bytes</span> <span class=\"hljs-number\">753664</span>\n<span class=\"hljs-comment\"># HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_stack_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_stack_sys_bytes</span> <span class=\"hljs-number\">753664</span>\n<span class=\"hljs-comment\"># HELP go_memstats_sys_bytes Number of bytes obtained from system.</span>\n<span class=\"hljs-comment\"># TYPE go_memstats_sys_bytes gauge</span>\n<span class=\"hljs-string\">go_memstats_sys_bytes</span> <span class=\"hljs-number\">2.084148e+07</span>\n<span class=\"hljs-comment\"># HELP go_threads Number of OS threads created.</span>\n<span class=\"hljs-comment\"># TYPE go_threads gauge</span>\n<span class=\"hljs-string\">go_threads</span> <span class=\"hljs-number\">12</span>\n</code></pre>\n<h2>3. 调用指标 RT</h2>\n<p>启动例子中的客户端，经过几次调用后，会发现增加了对应的数据指标，以默认namespace dubbo 为前缀。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># HELP dubbo_provider_service_rt </span>\n<span class=\"hljs-comment\"># TYPE dubbo_provider_service_rt gauge</span>\n<span class=\"hljs-string\">dubbo_provider_service_rt{group=\"dubbo-go\",method=\"SayHello\",service=\"com.apache.dubbo.HelloService\",timeout=\"\",version=\"3.0.0-rc3\"}</span> <span class=\"hljs-number\">127542</span>\n</code></pre>\n<p>可看到对应接口名、方法名的请求rt时间。该部分调用指标待后续完善。</p>\n<h2>4. 手动数据上报</h2>\n<p>可在业务代码中调用API进行手动数据上报。支持Counter、Summary、Gauge 类型，并支持多个标签。上报后即可收集。</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"dubbo.apache.org/dubbo-go/v3/metrics/prometheus\"</span>\n\n<span class=\"hljs-keyword\">for</span> {\n\t\t<span class=\"hljs-comment\">// metrics refresh per second</span>\n\t\ttime.Sleep(time.Second)\n\t\tprometheus.IncSummary(<span class=\"hljs-string\">\"test_summary\"</span>, rand.Float64())\n\t\tprometheus.IncSummaryWithLabel(<span class=\"hljs-string\">\"test_summary_with_label\"</span>, rand.Float64(), <span class=\"hljs-keyword\">map</span>[<span class=\"hljs-keyword\">string</span>]<span class=\"hljs-keyword\">string</span>{\n\t\t\t<span class=\"hljs-string\">\"summarylabel1\"</span>: <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-comment\">// label and value for this summary</span>\n\t\t\t<span class=\"hljs-string\">\"summarylabel2\"</span>: <span class=\"hljs-string\">\"value2\"</span>,\n\t\t})\n\n\t\tprometheus.IncCounter(<span class=\"hljs-string\">\"test_counter\"</span>)\n\t\tprometheus.IncCounterWithLabel(<span class=\"hljs-string\">\"test_counter_with_label\"</span>, <span class=\"hljs-keyword\">map</span>[<span class=\"hljs-keyword\">string</span>]<span class=\"hljs-keyword\">string</span>{\n\t\t\t<span class=\"hljs-string\">\"counterlabel1\"</span>: <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-comment\">// label and value for this counter</span>\n\t\t\t<span class=\"hljs-string\">\"counterlabel2\"</span>: <span class=\"hljs-string\">\"value2\"</span>,\n\t\t})\n\n\t\tprometheus.SetGauge(<span class=\"hljs-string\">\"test_gauge\"</span>, rand.Float64())\n\t\tprometheus.SetGaugeWithLabel(<span class=\"hljs-string\">\"test_gauge_with_label\"</span>, rand.Float64(), <span class=\"hljs-keyword\">map</span>[<span class=\"hljs-keyword\">string</span>]<span class=\"hljs-keyword\">string</span>{\n\t\t\t<span class=\"hljs-string\">\"gaugelabel1\"</span>: <span class=\"hljs-string\">\"value1\"</span>,\n\t\t\t<span class=\"hljs-string\">\"gaugelabel2\"</span>: <span class=\"hljs-string\">\"value2\"</span>,\n\t\t})\n\t}\n</code></pre>\n<p>运行一段时间后，可以收集到如下用户定义指标</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-comment\"># HELP dubbo_test_counter </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_counter counter</span>\n<span class=\"hljs-string\">dubbo_test_counter</span> <span class=\"hljs-number\">463</span>\n<span class=\"hljs-comment\"># HELP dubbo_test_counter_with_label </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_counter_with_label counter</span>\n<span class=\"hljs-string\">dubbo_test_counter_with_label{counterlabel1=\"value1\",counterlabel2=\"value2\"}</span> <span class=\"hljs-number\">463</span>\n<span class=\"hljs-comment\"># HELP dubbo_test_gauge </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_gauge gauge</span>\n<span class=\"hljs-string\">dubbo_test_gauge</span> <span class=\"hljs-number\">0.7402836247772934</span>\n<span class=\"hljs-comment\"># HELP dubbo_test_gauge_with_label </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_gauge_with_label gauge</span>\n<span class=\"hljs-string\">dubbo_test_gauge_with_label{gaugelabel1=\"value1\",gaugelabel2=\"value2\"}</span> <span class=\"hljs-number\">0.8360973807546456</span>\n<span class=\"hljs-comment\"># HELP dubbo_test_summary </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_summary summary</span>\n<span class=\"hljs-string\">dubbo_test_summary_sum</span> <span class=\"hljs-number\">228.1800106582441</span>\n<span class=\"hljs-string\">dubbo_test_summary_count</span> <span class=\"hljs-number\">463</span>\n<span class=\"hljs-comment\"># HELP dubbo_test_summary_with_label </span>\n<span class=\"hljs-comment\"># TYPE dubbo_test_summary_with_label summary</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.5\"}</span> <span class=\"hljs-number\">0.5174757569778469</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.75\"}</span> <span class=\"hljs-number\">0.734268575017709</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.9\"}</span> <span class=\"hljs-number\">0.9059918694279894</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.98\"}</span> <span class=\"hljs-number\">0.9761803018478838</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.99\"}</span> <span class=\"hljs-number\">0.9820270046489341</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label{summarylabel1=\"value1\",summarylabel2=\"value2\",quantile=\"0.999\"}</span> <span class=\"hljs-number\">0.9986025122460248</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label_sum{summarylabel1=\"value1\",summarylabel2=\"value2\"}</span> <span class=\"hljs-number\">233.609026131067</span>\n<span class=\"hljs-string\">dubbo_test_summary_with_label_count{summarylabel1=\"value1\",summarylabel2=\"value2\"}</span> <span class=\"hljs-number\">463</span>\n</code></pre>\n<p>下一章: <a href=\"./generic.html\">【泛化调用】</a></p>\n",
  "link": "/zh-cn/docs/user/samples/metrics.html",
  "meta": {
    "title": "Dubbo-go 数据上报",
    "keywords": "dubbogo 数据上报",
    "description": "提示用户dubbo使用的数据上报方式"
  }
}