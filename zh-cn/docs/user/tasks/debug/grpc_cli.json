{
  "filename": "grpc_cli.md",
  "__html": "<h1>使用 grpc_cli 调试 Dubbo-go 应用</h1>\n<p>grpc_cli 工具是 gRPC 生态用于调试服务的工具，在 server 开启<a href=\"https://github.com/grpc/grpc/blob/master/doc/server-reflection.md\">反射服务</a>的前提下，可以获取到服务的 proto 文件、服务名、方法名、参数列表，以及发起 gRPC 调用。</p>\n<p>Triple 协议兼容 gRPC 生态，并默认开启 gRPC 反射服务，因此可以直接使用 grpc_cli 调试 triple 服务。</p>\n<h2>1. 准备工作</h2>\n<ul>\n<li>dubbo-go cli 工具和依赖工具已安装</li>\n<li>创建一个新的 demo 应用</li>\n<li>安装grpc_cli，参考 <a href=\"https://github.com/grpc/grpc/blob/master/doc/command_line_tool.md\">grpc_cli 文档</a></li>\n</ul>\n<h2>2. 使用 grpc_cli 工具进行 Triple 服务调试</h2>\n<h3>2.1 启动 demo 应用 server</h3>\n<pre><code class=\"language-bash\">$ mkdir grpc_cli_test\n$ <span class=\"hljs-built_in\">cd</span> grpc_cli_test\n$ dubbogo-cli newDemo .\n$ go mod tidy\n$ <span class=\"hljs-built_in\">cd</span> go-server/cmd\n$ go run .\n</code></pre>\n<h3>2.2 使用 grpc_cli 进行服务调试</h3>\n<ol>\n<li>查看 triple 服务的接口定义</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> grpc_cli ls localhost:20000 -l</span>\nfilename: samples_api.proto\npackage: api;\nservice Greeter {\n  rpc SayHello(api.HelloRequest) returns (api.User) {}\n  rpc SayHelloStream(stream api.HelloRequest) returns (stream api.User) {}\n}\n</code></pre>\n<ol start=\"2\">\n<li>\n<p>查看请求参数类型</p>\n<p>例如开发者期望测试上述端口的 SayHello 方法，尝试获取 HelloRequest 的具体定义，需要执行如下指令，可查看到对应参数的定义。</p>\n</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> grpc_cli <span class=\"hljs-built_in\">type</span> localhost:20000 api.HelloRequest</span>\nmessage HelloRequest {\n  string name = 1 [json_name = \"name\"];\n}\n</code></pre>\n<ol start=\"3\">\n<li>\n<p>请求接口</p>\n<p>已经知道了请求参数的具体类型，可以发起调用来测试对应服务。查看返回值是否符合预期。</p>\n</li>\n</ol>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> grpc_cli call localhost:20000 SayHello <span class=\"hljs-string\">\"name: 'laurence'\"</span></span>\nconnecting to localhost:20000\nname: \"Hello laurence\"\nid: \"12345\"\nage: 21\nReceived trailing metadata from server:\naccept-encoding : identity,gzip\ngrpc-accept-encoding : identity,deflate,gzip\nRpc succeeded with OK status\n</code></pre>\n<p>​\t可看到获得了正确的返回值。在 server 侧可以观察到被正确请求的日志：</p>\n<pre><code class=\"language-shell\">Dubbo3 GreeterProvider get user name = laurence\n</code></pre>\n",
  "link": "/zh-cn/docs/user/tasks/debug/grpc_cli.html",
  "meta": {
    "title": "使用 grpc_cli 调试 Dubbo-go 服务",
    "keywords": "使用 grpc_cli 调试 Dubbo-go 服务",
    "description": "使用 grpc_cli 调试 Dubbo-go 服务"
  }
}